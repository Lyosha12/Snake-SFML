//
// Created by Lyosha12 on 23.06.2018.
//

#ifndef SNAKE_BONUS_HPP
#define SNAKE_BONUS_HPP

#include <memory>
#include <functional>

// FIXME: Временно голова и тело выполняют одну и ту же операцию
// При попытке взять их игра завершиться.
// Для мультиплеера нужно расширить идею.
void endGame();

class Snake;


class Bonus {
    /* Бонус - это некоторое действие над змейкой.
     * Бонус связан с заполнителем клетки.
     * Сначала создаётся заполнитель клетки.
     * В процессе создания с заполнителем ассоциируется бонус
     * посредством функций типа LazyCreator и LazyDestroyer.
     * Какой бонус ассоциировать - решает заполнитель.
     *
     * Время жизни бонуса - читай заполнителя - отслеживает заполнитель,
     * т.к. бонус создаётся отложенно и не может хранить время своей жизни.
     */
  public:
    Bonus(Snake& snake);
    virtual ~Bonus() = default;
    Bonus(Bonus const&) = delete;
    Bonus& operator= (Bonus const&) = delete;
    
    virtual bool activate() = 0;
    
    /* Функция отложенного создания бонуса.
     * Бонус считается существующим на поле с момента
     * создания ассоциированного с ним заполнителя.
     * При создании заполнителя вызывается функция, возвращающая LazyCreator.
     *
     * LazyCreator, как видно по названию, лишь посредник в созбании бонуса.
     * LazyCreator делает нужные приготовления к созданию бонуса.
     * Например, выставляет флаг о том, что бонус взяли и нужно разместить
     * на поле ещё один (основное предназначение).
     *
     * Далее LazyCreator вызывается и возвращает, собственно, бонус,
     * которым уже владеет змейка и работает с ним уже по определённым бонусом
     * закономерностям.
     */
    using LazyCreator = std::function<std::unique_ptr<Bonus>(Snake&)>;
    
    /* LazyDestroyer тоже ассоциируется с заполнителем клетки.
     * В случае, когда заполнитель уничтожается, он вызывает, помимо своего
     * деструктора, и функцию LazyDestroyer.
     *
     * Главное предназначение - оповестить BonusManager о том, что на поле
     * бонуса уже нет. Оповещение о разрушении, как и оповещение о создании,
     * происходит косвенно - установкой соответствующего атомарного флага.
     */
    using LazyDestroyer = std::function<void(void)>;
    
  protected:
    Snake& snake;
    
};


#endif //SNAKE_BONUS_HPP
